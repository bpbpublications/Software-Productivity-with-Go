
import (
"fmt"
"net"
"bufio"
"sync"
)

type ChatServer struct {
clients map[net.Conn]bool
broadcast chan string
mutex sync.Mutex
}

func main() {
server := NewChatServer()
server.Start()
}

func NewChatServer() *ChatServer {
return &ChatServer{
clients: make(map[net.Conn]bool),
broadcast: make(chan string),
}
}

func (s *ChatServer) Start() {
listener, err := net.Listen("tcp", "localhost:8080")
if err != nil {
fmt.Println("Error:", err)
return
}
defer listener.Close()

fmt.Println("Chat Server is listening on port 8080")

for {
conn, err := listener.Accept()
if err != nil {
fmt.Println("Error:", err)
return
}

s.mutex.Lock()
s.clients[conn] = true
s.mutex.Unlock()

go s.handleClient(conn)
}
}

func (s *ChatServer) handleClient(client net.Conn) {
defer client.Close()

reader := bufio.NewReader(client)

for {
message, err := reader.ReadString('\n')
if err != nil {
s.mutex.Lock()
delete(s.clients, client)
s.mutex.Unlock()
return
}

s.broadcast <- message
}
}
